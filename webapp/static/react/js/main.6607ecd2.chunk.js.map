{"version":3,"sources":["App/Repository/images/git_logo.svg","App/Commit/images/Commit-Logo.svg","App/Edit/images/edit_logo.svg","Navbar/images/BackArrow.svg","Navbar/images/MergeInPeaceLogo.png","App/Repository/Repository.jsx","App/Commit/Commit.jsx","App/Edit/Edit.jsx","Elements/Spinner/Spinner.jsx","App/images/ICONS.jsx","App/App.jsx","Navbar/Navbar.jsx","RouteWrapper/RouteWrapper.jsx","RouteWrapper/backendCommunication.jsx","serviceWorker.js","index.js"],"names":["module","exports","Repository","className","onClick","props","changePath","name","src","GitLogo","alt","this","Component","Commit","repository","hash","CommitLogo","Edit","EditLogo","editObject","file_id","replace","user_id","Spinner","ICONS","refresh","title","xmlns","width","height","viewBox","d","fill","remove","App","getRepoContent","bind","getCommitContent","getEditContent","state","repositories","commits","edits","content","buttonrow","console","log","page","records","count","map","value","index","window","location","reload","triggerRemove","commit","element","page_content","loading","Navbar","getPathBlock","handlePrevClick","path","Fragment","style","whiteSpace","handlePathClick","newPath","slice","oldPath","length","pop","BackArrow","MergeInPeaceLogo","RouteWrapper","setCurrentRecords","triggerRecordUpdate","pathname","split","setState","addEventListener","event","pathString","getPathString","pathToBePushed","history","pushState","url","params","Promise","resolve","reject","xmlhttp","XMLHttpRequest","onreadystatechange","readyState","status","responseText","query_string","key","forEach","toString","open","send","JSON","stringify","BackendGET","then","resolveMessage","resolveJSON","parse","catch","rejectMessage","Source","BackendDELETE","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"js/main.6607ecd2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"media/git_logo.48f45c2e.svg\";","module.exports = __webpack_public_path__ + \"media/Commit-Logo.d56da875.svg\";","module.exports = __webpack_public_path__ + \"media/edit_logo.fadbd09b.svg\";","module.exports = __webpack_public_path__ + \"media/BackArrow.87285bb7.svg\";","module.exports = __webpack_public_path__ + \"media/MergeInPeaceLogo.a562bed7.png\";","import React, {Component} from 'react';\nimport GitLogo from './images/git_logo.svg';\n\nimport './Repository.scss';\n\nexport class Repository extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Repository\" onClick={() => this.props.changePath(this.props.name, \"\", [])}>\n\t\t\t\t<img className=\"Logo\" src={GitLogo} alt=\"Git Logo\"/>\n\t\t\t\t<div className=\"Label\">{this.props.name}</div>\n\t\t\t</div>\n\t\t);\n\t}\n}","import React, {Component} from 'react';\nimport CommitLogo from './images/Commit-Logo.svg';\n\nimport './Commit.scss';\n\nexport class Commit extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Commit\" onClick={() => this.props.changePath(this.props.repository, this.props.hash, [])}>\n\t\t\t\t<img className=\"Logo\" src={CommitLogo} alt=\"Git Logo\"/>\n\t\t\t\t<div className=\"Label\">{this.props.hash}</div>\n\t\t\t</div>\n\t\t);\n\t}\n}","import React, {Component} from 'react';\nimport EditLogo from './images/edit_logo.svg';\n\nimport './Edit.scss';\n\nexport class Edit extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Edit\">\n\t\t\t\t<img className=\"Logo\" src={EditLogo} alt=\"Git Logo\"/>\n\t\t\t\t<div className=\"Label Label1\">{this.props.editObject.file_id.replace(/___/g, \"/\")}</div>\n\t\t\t\t<div className=\"Label Label2\">{this.props.editObject.user_id}</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import React from 'react';\n\nimport './Spinner.scss';\n\nexport function Spinner() {\n\treturn (\n\t\t<div className=\"Spinner\">\n\t\t\t<div className=\"Arc1\"/>\n\t\t\t<div className=\"Arc2\"/>\n\t\t</div>\n\t);\n}","import React from 'react';\n\nexport const ICONS = {\n\t\trefresh: (\n\t\t\t<svg alt=\"Refresh Icon\"\n\t\t\t     title=\"Reload Repository-Information\"\n\t\t\t     xmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t     width=\"22\"\n\t\t\t     height=\"22\"\n\t\t\t     viewBox=\"1 1 22 22\">\n\t\t\t\t<path\n\t\t\t\t\td=\"M17.65 6.35C16.2 4.9 14.21 4 12 4c-4.42 0-7.99 3.58-7.99 8s3.57 8 7.99 8c3.73 0 6.84-2.55 7.73-6h-2.08c-.82 2.33-3.04 4-5.65 4-3.31 0-6-2.69-6-6s2.69-6 6-6c1.66 0 3.14.69 4.22 1.78L13 11h7V4l-2.35 2.35z\"/>\n\t\t\t\t<path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n\t\t\t</svg>\n\t\t),\n\t\tremove: (\n\t\t\t<svg alt=\"Remove Icon\"\n\t\t\t     title=\"Remove Information\"\n\t\t\t     xmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t     width=\"22\"\n\t\t\t     height=\"22\"\n\t\t\t     viewBox=\"1 1 22 22\">\n\t\t\t\t<path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"/>\n\t\t\t\t<path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n\t\t\t</svg>\n\t\t),\n\t}\n;\n","import React, {Component} from 'react';\n\nimport './App.scss';\nimport '../Elements/Button/Button.scss';\n\nimport {Repository} from \"./Repository/Repository\";\nimport {Commit} from \"./Commit/Commit\";\nimport {Edit} from \"./Edit/Edit\";\nimport {Spinner} from \"../Elements/Spinner/Spinner\";\n\nimport {ICONS} from \"./images/ICONS\";\n\nclass App extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.getRepoContent = this.getRepoContent.bind(this);\n\t\tthis.getCommitContent = this.getCommitContent.bind(this);\n\t\tthis.getEditContent = this.getEditContent.bind(this);\n\n\t\tthis.state = {\n\t\t\trepositories: [],\n\t\t\tcommits: [],\n\t\t\tedits: []\n\t\t}\n\t}\n\n\tgetRepoContent() {\n\t\tlet content, buttonrow;\n\n\t\tconsole.log({page: \"repo\", records: this.props.records});\n\n\t\tlet count = this.props.records[\"count\"];\n\t\tlet repositories = this.props.records[\"ids\"];\n\n\t\tif (count === 0) {\n\t\t\tcontent = <div className=\"Empty\">Not keeping track of any repositories</div>;\n\t\t} else {\n\t\t\tcontent = repositories.map((value, index) => (\n\t\t\t\t<Repository name={value} changePath={this.props.changePath}/>\n\t\t\t));\n\t\t}\n\n\t\tbuttonrow = (\n\t\t\t<div className=\"ButtonWrapper\">\n\t\t\t\t<div className=\"Icon IconRefresh\"\n\t\t\t\t     onClick={() => window.location.reload()}>\n\t\t\t\t\t{ICONS.refresh}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"Icon IconRemove\"\n\t\t\t\t     onClick={this.props.triggerRemove}>\n\t\t\t\t\t{ICONS.remove}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\n\t\treturn (\n\t\t\t<div className=\"Content\">\n\t\t\t\t{buttonrow}\n\t\t\t\t{content}\n\t\t\t</div>\n\t\t);\n\t}\n\n\tgetCommitContent() {\n\t\tlet content, buttonrow;\n\n\t\tconsole.log({page: \"commit\", records: this.props.records});\n\t\t//let elements = this.props.records[\"records\"][this.props.repository];\n\n\t\tlet count = this.props.records[\"records\"][this.props.repository][\"count\"];\n\t\tlet commits = this.props.records[\"records\"][this.props.repository][\"ids\"];\n\n\t\tif (count === 0) {\n\t\t\tcontent = <div className=\"Empty\">Not keeping track of any commits</div>;\n\t\t} else {\n\t\t\tcontent = commits.map((value, index) => (\n\t\t\t\t<Commit hash={value} changePath={this.props.changePath} repository={this.props.repository}/>\n\t\t\t));\n\t\t}\n\n\t\tbuttonrow = (\n\t\t\t<div className=\"ButtonWrapper\">\n\t\t\t\t<div className=\"Icon IconRefresh\"\n\t\t\t\t     onClick={() => window.location.reload()}>\n\t\t\t\t\t{ICONS.refresh}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"Icon IconRemove\"\n\t\t\t\t     onClick={this.props.triggerRemove}>\n\t\t\t\t\t{ICONS.remove}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\n\t\treturn (\n\t\t\t<div className=\"Content\">\n\t\t\t\t{buttonrow}\n\t\t\t\t{content}\n\t\t\t</div>\n\t\t);\n\t}\n\n\tgetEditContent() {\n\t\tlet content, buttonrow;\n\n\t\tconsole.log({page: \"edit\", records: this.props.records});\n\n\t\tlet count = this.props.records[\"records\"][this.props.repository][\"records\"][this.props.commit][\"count\"];\n\t\tlet edits = this.props.records[\"records\"][this.props.repository][\"records\"][this.props.commit][\"records\"];\n\n\t\tif (count === 0) {\n\t\t\tcontent = <div className=\"Empty\">Not keeping track of any edits</div>;\n\t\t} else {\n\t\t\tcontent = edits.map((element, index) => (\n\t\t\t\t<Edit editObject={element}/>\n\t\t\t));\n\t\t}\n\n\t\tbuttonrow = (\n\t\t\t<div className=\"ButtonWrapper\">\n\t\t\t\t<div className=\"Icon IconRefresh\"\n\t\t\t\t     onClick={() => window.location.reload()}>\n\t\t\t\t\t{ICONS.refresh}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"Icon IconRemove\"\n\t\t\t\t     onClick={this.props.triggerRemove}>\n\t\t\t\t\t{ICONS.remove}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\n\t\treturn (\n\t\t\t<div className=\"Content\">\n\t\t\t\t{buttonrow}\n\t\t\t\t{content}\n\t\t\t</div>\n\t\t);\n\t}\n\n\trender() {\n\t\tlet page_content;\n\n\t\tconsole.log({repository: this.props.repository, commit: this.props.commit});\n\n\t\tif (this.props.loading) {\n\t\t\tpage_content = <Spinner/>;\n\t\t} else if (this.props.repository === \"\") {\n\t\t\tpage_content = this.getRepoContent();\n\t\t} else if (this.props.commit === \"\"){\n\t\t\tpage_content = this.getCommitContent();\n\t\t} else {\n\t\t\tpage_content = this.getEditContent();\n\t\t}\n\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t{page_content}\n\t\t\t</div>\n\n\t\t);\n\t}\n}\n\nexport default App;\n","import React, {Component} from 'react';\n\nimport BackArrow from \"./images/BackArrow.svg\"\nimport MergeInPeaceLogo from './images/MergeInPeaceLogo.png';\n\nimport './Navbar.scss';\n\nexport class Navbar extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.getPathBlock = this.getPathBlock.bind(this);\n\t\tthis.handlePrevClick = this.handlePrevClick.bind(this);\n\t}\n\n\tgetPathBlock() {\n\t\treturn this.props.path.map((value, index) => (\n\t\t\t<React.Fragment>\n\t\t\t\t{index !== 0 && <div style={{whiteSpace: \"pre\"}}> / </div>}\n\t\t\t\t<div onClick={() => this.handlePathClick(index)}>{value}</div>\n\t\t\t</React.Fragment>\n\t\t));\n\t}\n\n\thandlePathClick(index) {\n\t\tlet newPath = this.props.path.slice(0, index + 1);\n\t\tconsole.log({oldPath: this.props.path, newPath: newPath});\n\t\tthis.props.changePath(this.props.repository, this.props.commit, newPath);\n\t}\n\n\thandlePrevClick() {\n\t\tif (this.props.commit === \"\") {\n\t\t\tthis.props.changePath(\"\", \"\", []);\n\t\t} else if (this.props.path.length === 0) {\n\t\t\tthis.props.changePath(this.props.repository, \"\", []);\n\t\t} else {\n\t\t\tthis.props.path.pop();\n\t\t\tthis.props.changePath(this.props.repository, \"\", this.props.path);\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Navbar\">\n\t\t\t\t{this.props.repository !== \"\" && (\n\t\t\t\t\t<div className=\"PrevButton\" onClick={this.handlePrevClick}>\n\t\t\t\t\t\t<img src={BackArrow} alt=\"Go Back\"/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t\t<div className=\"Path\">{this.getPathBlock()}</div>\n\t\t\t\t<div className=\"Commit\">\n\t\t\t\t\t<strong>Commit:</strong> {this.props.commit !== \"\" ? this.props.commit : \"-\"}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"Repository\">\n\t\t\t\t\t<strong>Repository:</strong> {this.props.repository !== \"\" ? this.props.repository : \"-\"}\n\t\t\t\t</div>\n\t\t\t\t{this.props.commit === \"\" && (\n\t\t\t\t\t<div className=\"MergeInPeaceLogo\">\n\t\t\t\t\t\t<img src={MergeInPeaceLogo} alt=\"Merge in Peace Logo\"/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n\n}\n","import React, {Component} from 'react';\nimport App from '../App/App';\nimport {BackendGET, BackendDELETE} from \"./backendCommunication\";\nimport {Navbar} from \"../Navbar/Navbar\";\n\nexport class RouteWrapper extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\trepository: \"\",\n\t\t\tcommit: \"\",\n\t\t\tpath: [],\n\t\t\trecords: {},\n\t\t\tloading: true\n\t\t};\n\n\t\tthis.changePath = this.changePath.bind(this);\n\n\t\tthis.setCurrentRecords = this.setCurrentRecords.bind(this);\n\n\t\tthis.triggerRecordUpdate = this.triggerRecordUpdate.bind(this);\n\t\tthis.triggerRemove = this.triggerRemove.bind(this);\n\t}\n\n\tcomponentWillMount() {\n\t\t// Called when the page is refreshed or newly loaded\n\t\tlet path = [];\n\t\tif (window.location.pathname !== \"/visual\") {\n\t\t\t// slice(7) to get the \"/visual\" out of there\n\t\t\tpath = window.location.pathname.slice(7).split(\"/\");\n\t\t}\n\n\t\tlet repository = \"\", commit = \"\";\n\t\tif (path.length > 1) {\n\t\t\trepository = path[1];\n\t\t}\n\t\tif (path.length > 2) {\n\t\t\tcommit = path[2];\n\t\t}\n\n\t\tthis.setState({\n\t\t\trepository: repository,\n\t\t\tcommit: commit,\n\t\t\tpath: path.slice(3)\n\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\twindow.addEventListener('popstate', event => {\n\t\t\tif (event.state !== null) {\n\t\t\t\tif ((event.state.repository !== null) && (event.state.commit !== null) && (event.state.path !== null)) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\trepository: event.state.repository,\n\t\t\t\t\t\tcommit: event.state.commit,\n\t\t\t\t\t\tpath: event.state.path\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\trepository: \"\",\n\t\t\t\tcommit: \"\",\n\t\t\t\tpath: []\n\t\t\t});\n\t\t});\n\n\t\tthis.setCurrentRecords();\n\t}\n\n\tstatic getPathString(repository, commit, path) {\n\t\tlet pathString = \"/\";\n\t\tif (repository !== \"\") {\n\t\t\tpathString += repository + \"/\";\n\t\t\tif (commit !== \"\") {\n\t\t\t\tpathString += commit + \"/\";\n\t\t\t\tif (path.length !== 0) {\n\t\t\t\t\tpath.forEach(element => {\n\t\t\t\t\t\tpathString += element + \"/\";\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn pathString;\n\t}\n\n\tchangePath(repository, commit, path) {\n\n\t\tlet pathString = \"/visual\" + RouteWrapper.getPathString(repository, commit, path);\n\t\tconsole.log({pathToBePushed: pathString});\n\t\twindow.history.pushState({\n\t\t\trepository: repository,\n\t\t\tcommit: commit,\n\t\t\tpath: path\n\t\t}, \"\", pathString);\n\n\t\tthis.setState({\n\t\t\trepository: repository,\n\t\t\tcommit: commit,\n\t\t\tpath: path\n\t\t});\n\t}\n\n\ttriggerRecordUpdate() {\n\t\tthis.setCurrentRecords();\n\t}\n\n\tsetCurrentRecords() {\n\t\tthis.setState({loading: true});\n\n\t\t// let url = \"http://127.0.0.1:5000/fetchall\";\n\t\t// let url = \"https://hackatum2019.herokuapp.com/fetchall\";\n\t\tlet url = \"/fetchall\";\n\n\t\tBackendGET(url, {}).then((resolveMessage) => {\n\t\t\tlet resolveJSON = JSON.parse(resolveMessage);\n\t\t\tthis.setState({\n\t\t\t\trecords: resolveJSON[\"records\"],\n\t\t\t\tloading: false\n\t\t\t});\n\t\t}).catch((rejectMessage) => {\n\t\t\tconsole.log(\"Nothing Here!\");\n\t\t\tthis.setState({loading: false});\n\t\t});\n\t}\n\n\ttriggerRemove() {\n\t\t// This method already knows what to\n\t\t// remove because it knows the current path\n\n\t\tthis.setState({loading: true});\n\n\t\t// let url = \"http://127.0.0.1:5000/\";\n\t\t// let url = \"https://hackatum2019.herokuapp.com/\";\n\t\tlet url = \"/\";\n\n\t\tif (this.state.repository !== \"\") {\n\t\t\turl += \"repository/\" + this.state.repository + \"/\";\n\t\t\tif (this.state.commit !== \"\") {\n\t\t\t\turl += \"commit/\" + this.state.commit;\n\t\t\t}\n\t\t}\n\n\t\tBackendDELETE(url, {}).then((resolveMessage) => {\n\t\t\tthis.setCurrentRecords();\n\t\t\tthis.changePath(\"\", \"\", []);\n\t\t}).catch((rejectMessage) => {\n\t\t\tconsole.log(\"Nothing Here!\");\n\t\t\tthis.setState({loading: false});\n\t\t});\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Navbar repository={this.state.repository}\n\t\t\t\t        commit={this.state.commit}\n\t\t\t\t        path={this.state.path}\n\t\t\t\t        changePath={this.changePath}/>\n\t\t\t\t<App\n\t\t\t\t\trepository={this.state.repository}\n\t\t\t\t\tcommit={this.state.commit}\n\t\t\t\t\tpath={this.state.path}\n\t\t\t\t\tchangePath={this.changePath}\n\t\t\t\t\ttriggerRecordUpdate={this.triggerRecordUpdate}\n\t\t\t\t\ttriggerRemove={this.triggerRemove}\n\t\t\t\t\trecords={this.state.records}\n\t\t\t\t\tloading={this.state.loading}/>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}","\nexport function BackendPOST(url, params) {\n\n    return new Promise((resolve, reject) => {\n\n        let xmlhttp;\n\n        if (window.XMLHttpRequest) {\n            // code for modern browsers\n            xmlhttp = new XMLHttpRequest();\n\n            xmlhttp.onreadystatechange = function() {\n\n                /*\n                https://www.w3schools.com/xml/ajax_xmlhttprequest_response.asp\n                https://malcoded.com/posts/react-http-requests-axios/\n                */\n\n                /*\n                this.readyState = 0: request not initialized\n                                  1: server connection established\n                                  2: request received\n                                  3: processing request\n                                  4: request finished and response is ready\n                */\n\n                if (this.readyState === 4) {\n                    if (this.status === 200) {\n                        resolve(this.responseText);\n                    } else {\n                        reject(\"\\nAJAX Request Rejected: \" + this.responseText);\n                    }\n                }\n            };\n\n            let query_string = JSON.stringify(params);\n            console.log({Source: \"POSTfkt\", query_string: query_string});\n\n            xmlhttp.open(\"POST\", url, true);\n            xmlhttp.send(query_string)\n\n        }\n\n    });\n\n}\n\n\n\n\nexport function BackendGET(url, params) {\n\n    return new Promise((resolve, reject) => {\n\n        let xmlhttp;\n\n        if (window.XMLHttpRequest) {\n            // code for modern browsers\n            xmlhttp = new XMLHttpRequest();\n\n            xmlhttp.onreadystatechange = function() {\n\n                /*\n                https://www.w3schools.com/xml/ajax_xmlhttprequest_response.asp\n                https://malcoded.com/posts/react-http-requests-axios/\n                */\n\n                /*\n                this.readyState = 0: request not initialized\n                                  1: server connection established\n                                  2: request received\n                                  3: processing request\n                                  4: request finished and response is ready\n                */\n\n                if (this.readyState === 4) {\n                    if (this.status === 200) {\n                        resolve(this.responseText);\n                    } else {\n                        reject(\"\\nAJAX Request Rejected: \" + this.responseText);\n                    }\n                }\n            };\n\n            let query_string = \"?\";\n\n            for (let key in params) {\n                if (typeof (params[key]) !== \"string\") {\n                    query_string += key + \"=\";\n                    // eslint-disable-next-line\n                    params[key].forEach((element) => {\n                        query_string += element.toString() + \",\";\n                    });\n                } else {\n                    if (params[key] !== null) {\n                        query_string += key + \"=\" + params[key].toString();\n                    }\n                }\n                query_string += \"&\";\n            }\n\n            xmlhttp.open(\"GET\", url + query_string, true);\n            // xmlhttp.send(JSON.stringify(params))\n            xmlhttp.send(JSON.stringify(params))\n\n        }\n\n    });\n\n}\n\nexport function BackendDELETE(url, params) {\n\n    return new Promise((resolve, reject) => {\n\n        let xmlhttp;\n\n        if (window.XMLHttpRequest) {\n            // code for modern browsers\n            xmlhttp = new XMLHttpRequest();\n\n            xmlhttp.onreadystatechange = function() {\n\n                /*\n                https://www.w3schools.com/xml/ajax_xmlhttprequest_response.asp\n                https://malcoded.com/posts/react-http-requests-axios/\n                */\n\n                /*\n                this.readyState = 0: request not initialized\n                                  1: server connection established\n                                  2: request received\n                                  3: processing request\n                                  4: request finished and response is ready\n                */\n\n                if (this.readyState === 4) {\n                    if (this.status === 200) {\n                        resolve(this.responseText);\n                    } else {\n                        reject(\"\\nAJAX Request Rejected: \" + this.responseText);\n                    }\n                }\n            };\n\n            let query_string = JSON.stringify(params);\n            console.log({Source: \"DELETEfkt\", query_string: query_string});\n\n            xmlhttp.open(\"DELETE\", url, true);\n            xmlhttp.send(query_string)\n\n        }\n\n    });\n\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {RouteWrapper} from \"./RouteWrapper/RouteWrapper\";\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<RouteWrapper />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}